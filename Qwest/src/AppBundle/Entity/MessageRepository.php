<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Config\Definition\Exception\Exception;
use Symfony\Component\HttpFoundation\Session\Session;

/**
 * MessageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageRepository extends EntityRepository
{
    public function setLu($fil){
        $em = $this->getEntityManager();
        $session = new Session();
        $utilisateurId = $session->get("id");

        $queryBuilder = $this->_em->createQueryBuilder()
            ->select("m")
            ->from($this->_entityName, "m")
            ->leftJoin("m.fil", "f")
            ->where("f.id = :fil")
                ->setParameter(":fil", $fil)
            ->leftJoin("m.destinataire", "d")
            ->andWhere("d.id = :id")
                ->setParameter(":id", $utilisateurId)
            ->andWhere("m.lu = false")
        ;
        $query = $queryBuilder->getQuery()->getResult();

        foreach($query as $message)
        {
            $q = $this->createQueryBuilder("m")
                ->update("AppBundle\Entity\Message", 'm')
                ->set('m.lu', '?1')
                ->where('m.id = ?2')
                ->setParameter(1, true)
                ->setParameter(2, $message->getId())
                ->getQuery();
            $q->execute();

            $em->persist($message);
        }

        $em->flush();

        $resultat = $queryBuilder->getQuery()->getResult();

        return $resultat;
    }

    public function getNonLu($utilisateur){
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select("count(m.id)")
            ->from($this->_entityName, "m")
            ->leftJoin("m.destinataire", "d")
            ->andWhere("d.id = :id")
                ->setParameter(":id", $utilisateur)
            ->andWhere("m.lu = false")
        ;

        $resultat = $queryBuilder->getQuery()->getResult();

        return $resultat[0][1];
    }

    public function getNonLuByFil($utilisateur, $fil){
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select("count(m.id)")
            ->from($this->_entityName, "m")
            ->leftJoin("m.destinataire", "d")
            ->andWhere("d.id = :id")
                ->setParameter(":id", $utilisateur)
            ->leftJoin("m.fil", "f")
            ->andWhere("f.id = :idFil")
                ->setParameter(":idFil", $fil)
            ->andWhere("m.lu = false")
        ;

        $resultat = $queryBuilder->getQuery()->getResult();
        return $resultat[0][1];
    }
}
